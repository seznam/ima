"use strict";(self.webpackChunk_ima_docs=self.webpackChunk_ima_docs||[]).push([[7363],{5680:(e,n,a)=>{a.d(n,{xA:()=>c,yg:()=>g});var t=a(6540);function s(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){s(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var o=t.createContext({}),u=function(e){var n=t.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},c=function(e){var n=u(e.components);return t.createElement(o.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),d=s,g=p["".concat(o,".").concat(d)]||p[d]||m[d]||r;return a?t.createElement(g,l(l({ref:n},c),{},{components:a})):t.createElement(g,l({ref:n},c))}));function g(e,n){var a=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=a.length,l=new Array(r);l[0]=d;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i[p]="string"==typeof e?e:s,l[1]=i;for(var u=2;u<r;u++)l[u]=a[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6185:(e,n,a)=>{a.d(n,{A:()=>l});var t=a(6540),s=a(8017);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:a,className:l}=e;return t.createElement("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,l),hidden:a},n)}},1253:(e,n,a)=>{a.d(n,{A:()=>N});var t=a(8102),s=a(6540),r=a(8017),l=a(3104),i=a(9519),o=a(7485),u=a(1682),c=a(9466);function p(e){return function(e){return s.Children.map(e,(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:s}}=e;return{value:n,label:a,attributes:t,default:s}}))}function m(e){const{values:n,children:a}=e;return(0,s.useMemo)((()=>{const e=n??p(a);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function d(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:a}=e;const t=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,o.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function b(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,r=m(e),[l,i]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[o,u]=g({queryString:a,groupId:t}),[p,b]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,r]=(0,c.Dv)(a);return[t,(0,s.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:t}),h=(()=>{const e=o??p;return d({value:e,tabValues:r})?e:null})();(0,s.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var h=a(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:n,block:a,selectedValue:i,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.a_)(),m=e=>{const n=e.currentTarget,a=c.indexOf(n),t=u[a].value;t!==i&&(p(n),o(t))},d=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1];break}}n?.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},n)},u.map((e=>{let{value:n,label:a,attributes:l}=e;return s.createElement("li",(0,t.A)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>c.push(e),onKeyDown:d,onClick:m},l,{className:(0,r.A)("tabs__item",y.tabItem,l?.className,{"tabs__item--active":i===n})}),a??n)})))}function v(e){let{lazy:n,children:a,selectedValue:t}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===t));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t}))))}function C(e){const n=b(e);return s.createElement("div",{className:(0,r.A)("tabs-container",y.tabList)},s.createElement(f,(0,t.A)({},e,n)),s.createElement(v,(0,t.A)({},e,n)))}function N(e){const n=(0,h.A)();return s.createElement(C,(0,t.A)({key:String(n)},e))}},3585:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var t=a(8102),s=(a(6540),a(5680)),r=a(1253),l=a(6185);const i={title:"ScrambleCSS Plugin",description:"CLI > CLI Plugins and their API > ScrambleCSS Plugin"},o=void 0,u={unversionedId:"cli/plugins/scramble-css-plugin",id:"cli/plugins/scramble-css-plugin",title:"ScrambleCSS Plugin",description:"CLI > CLI Plugins and their API > ScrambleCSS Plugin",source:"@site/../docs/cli/plugins/scramble-css-plugin.md",sourceDirName:"cli/plugins",slug:"/cli/plugins/scramble-css-plugin",permalink:"/cli/plugins/scramble-css-plugin",draft:!1,editUrl:"https://github.com/seznam/ima/tree/master/docs/../docs/cli/plugins/scramble-css-plugin.md",tags:[],version:"current",lastUpdatedBy:"lukasPan",lastUpdatedAt:1737723026,formattedLastUpdatedAt:"Jan 24, 2025",frontMatter:{title:"ScrambleCSS Plugin",description:"CLI > CLI Plugins and their API > ScrambleCSS Plugin"},sidebar:"docs",previous:{title:"Analyze Plugin",permalink:"/cli/plugins/analyze-plugin"},next:{title:"LESS Constants Plugin",permalink:"/cli/plugins/less-constants-plugin"}},c={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"<code>$CssClasses</code> override and <code>hashtable.json</code>",id:"cssclasses-override-and-hashtablejson",level:3},{value:"CLI Arguments",id:"cli-arguments",level:2},{value:"--scrambleCss",id:"--scramblecss",level:3},{value:"Options",id:"options",level:2},{value:"scrambleCssMinimizerOptions",id:"scramblecssminimizeroptions",level:3}],m={toc:p},d="wrapper";function g(e){let{components:n,...a}=e;return(0,s.yg)(d,(0,t.A)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"Implements CSS class minimizer and uglifier that can be reverse-compiled at runtime (you can access classes using their original name)."),(0,s.yg)("p",null,"It works by processing all CSS files using custom PostCSS plugin, that mangles (scrambles) and minimizes all classes, while also building translation table (",(0,s.yg)("inlineCode",{parentName:"p"},"hashtable.json"),") along the way."),(0,s.yg)("p",null,"The result is CSS file with mangled class names and companion hashtable that we use in our custom ",(0,s.yg)("inlineCode",{parentName:"p"},"$CssClasses")," processor to, translate existing classes used out components to the new scrambled ones."),(0,s.yg)("h2",{id:"requirements"},"Requirements"),(0,s.yg)("admonition",{type:"caution"},(0,s.yg)("p",{parentName:"admonition"},"As mentioned above, for this feature to work ",(0,s.yg)("strong",{parentName:"p"},"you need to wrap all your ",(0,s.yg)("inlineCode",{parentName:"strong"},"classNames")," in ",(0,s.yg)("inlineCode",{parentName:"strong"},"cssClasses")," function.")," Otherwise you'll end up with scrambled classes in CSS file but original class names in your components."),(0,s.yg)("pre",{parentName:"admonition"},(0,s.yg)("code",{parentName:"pre",className:"language-jsx"},"import { useComponent } from '@ima/react-hooks';\n\nexport default function Card() {\n  const { cssClasses } = useComponent();\n\n  return (\n    // highlight-next-line\n    <div className={cssClasses('card')} />\n  );\n}\n")),(0,s.yg)("p",{parentName:"admonition"},"or in case of ",(0,s.yg)("strong",{parentName:"p"},"class components"),":"),(0,s.yg)("pre",{parentName:"admonition"},(0,s.yg)("code",{parentName:"pre",className:"language-jsx"},"import { AbstractPureComponent } from '@ima/react-page-renderer';\n\nexport default class Card extends AbstractPureComponent {\n  render() {\n    return (\n      // highlight-next-line\n      <div className={this.cssClasses('card')} />\n    );\n  }\n}\n"))),(0,s.yg)("h2",{id:"installation"},"Installation"),(0,s.yg)(r.A,{groupId:"npm2yarn",mdxType:"Tabs"},(0,s.yg)(l.A,{value:"npm",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"npm install @ima/cli-plugin-scramble-css -D\n"))),(0,s.yg)(l.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"yarn add @ima/cli-plugin-scramble-css --dev\n"))),(0,s.yg)(l.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},"pnpm add @ima/cli-plugin-scramble-css -D\n")))),(0,s.yg)("h2",{id:"usage"},"Usage"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:"title=./ima.config.js",title:"./ima.config.js"},"const { ScrambleCssPlugin } = require('@ima/cli-plugin-scramble-css');\n\n/**\n * @type import('@ima/cli').ImaConfig\n */\nmodule.exports = {\n  plugins: [new ScrambleCssPlugin()],\n};\n")),(0,s.yg)("h3",{id:"cssclasses-override-and-hashtablejson"},(0,s.yg)("inlineCode",{parentName:"h3"},"$CssClasses")," override and ",(0,s.yg)("inlineCode",{parentName:"h3"},"hashtable.json")),(0,s.yg)("p",null,"We have to provide our custom ",(0,s.yg)("inlineCode",{parentName:"p"},"$CssClasses")," processor and pass it our generate ",(0,s.yg)("inlineCode",{parentName:"p"},"hashtable.json")," file. To do that, we're going to load it's contents in the app environment:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:"title=./server/config/environment.js",title:"./server/config/environment.js"},"const fs = require('fs');\nconst path = require('path');\n\nconst hashTablePath = path.resolve(\n  __dirname,\n  '../../build/static/css/hashTable.json'\n);\n\nmodule.exports = (() => {\n  return {\n    prod: {\n      $App: {\n        scrambleCss: {\n          hashTable: fs.existsSync(hashTablePath)\n            ? JSON.parse(fs.readFileSync(hashTablePath))\n            : null,\n        },\n      },\n      // ...\n    }\n  }\n});\n\n")),(0,s.yg)("p",null,"Finally, the hashtable is now available under ",(0,s.yg)("inlineCode",{parentName:"p"},"config.$App.scrambleCss.hashTable"),", so we're going to provide it to the plugin's custom ",(0,s.yg)("inlineCode",{parentName:"p"},"$CssClasses")," processor in the app ",(0,s.yg)("inlineCode",{parentName:"p"},"bind.js")," file, and we're done:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js",metastring:"title=./app/config/bind.js",title:"./app/config/bind.js"},"import { scrambleCssClasses } from '@ima/cli-plugin-scramble-css/scrambleCssClasses';\n\nexport default (ns, oc, config) => {\n  oc.bind(\n    '$CssClasses',\n    scrambleCssClasses(config?.$App?.scrambleCss?.hashTable),\n    []\n  );\n};\n")),(0,s.yg)("h2",{id:"cli-arguments"},"CLI Arguments"),(0,s.yg)("h3",{id:"--scramblecss"},"--scrambleCss"),(0,s.yg)("blockquote",null,(0,s.yg)("p",{parentName:"blockquote"},(0,s.yg)("inlineCode",{parentName:"p"},"boolean"))),(0,s.yg)("p",null,"The scrambling is enabled by default for the ",(0,s.yg)("inlineCode",{parentName:"p"},"production")," environment. However you can explicitly enable/disable it using this CLI argument. This applies for both CLI commands."),(0,s.yg)("h2",{id:"options"},"Options"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-ts"},"new ScrambleCssPlugin(options: {\n  scrambleCssMinimizerOptions?: {\n    hashTableFilename?: string;\n    mainAssetFilter?: (filename: string) => boolean;\n  };\n});\n")),(0,s.yg)("h3",{id:"scramblecssminimizeroptions"},"scrambleCssMinimizerOptions"),(0,s.yg)("blockquote",null,(0,s.yg)("p",{parentName:"blockquote"},(0,s.yg)("inlineCode",{parentName:"p"},"object"))),(0,s.yg)("p",null,"These are passed directly into the ",(0,s.yg)("inlineCode",{parentName:"p"},"ScrambleCssMinimizer"),". You can define custom:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("inlineCode",{parentName:"li"},"hashTableFilename")," - custom translation ",(0,s.yg)("inlineCode",{parentName:"li"},"hashtable.json")," filename. Defaults to: ",(0,s.yg)("strong",{parentName:"li"},"./build/static/css/hashTable.json"),"."),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("inlineCode",{parentName:"li"},"mainAssetFilter")," - should resolve to the ",(0,s.yg)("strong",{parentName:"li"},"main css file"),". The minimizer first processes the main.css file and generates the ",(0,s.yg)("inlineCode",{parentName:"li"},"hashtable.json")," ",(0,s.yg)("strong",{parentName:"li"},"translation table"),". If you then want to process other assets with existing hashtable, these should be filtered out in this function, since the minimizer minimizes them in ",(0,s.yg)("strong",{parentName:"li"},"second pass using existing")," ",(0,s.yg)("inlineCode",{parentName:"li"},"hashtable.json"),".")),(0,s.yg)("admonition",{type:"note"},(0,s.yg)("p",{parentName:"admonition"},"You should be fine with the default options in almost any situation except some special use cases.")))}g.isMDXComponent=!0}}]);