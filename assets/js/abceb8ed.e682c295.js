"use strict";(self.webpackChunk_ima_docs=self.webpackChunk_ima_docs||[]).push([[9123],{5680:(e,a,n)=>{n.d(a,{xA:()=>p,yg:()=>u});var r=n(6540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function g(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var o=r.createContext({}),s=function(e){var a=r.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},p=function(e){var a=s(e.components);return r.createElement(o.Provider,{value:a},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,p=g(e,["components","mdxType","originalType","parentName"]),d=s(n),m=t,u=d["".concat(o,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(u,l(l({ref:a},p),{},{components:n})):r.createElement(u,l({ref:a},p))}));function u(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,l=new Array(i);l[0]=m;var g={};for(var o in a)hasOwnProperty.call(a,o)&&(g[o]=a[o]);g.originalType=e,g[d]="string"==typeof e?e:t,l[1]=g;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1419:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>g,toc:()=>s});var r=n(8102),t=(n(6540),n(5680));const i={id:"ima_core.PageManager",title:"Class: PageManager",sidebar_label:"@ima/core.PageManager",custom_edit_url:null},l=void 0,g={unversionedId:"api/classes/ima_core.PageManager",id:"api/classes/ima_core.PageManager",title:"Class: PageManager",description:"@ima/core.PageManager",source:"@site/../docs/api/classes/ima_core.PageManager.md",sourceDirName:"api/classes",slug:"/api/classes/ima_core.PageManager",permalink:"/api/classes/ima_core.PageManager",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"ima_core.PageManager",title:"Class: PageManager",sidebar_label:"@ima/core.PageManager",custom_edit_url:null},sidebar:"api",previous:{title:"@ima/core.PageHandlerRegistry",permalink:"/api/classes/ima_core.PageHandlerRegistry"},next:{title:"@ima/core.PageMetaHandler",permalink:"/api/classes/ima_core.PageMetaHandler"}},o={},s=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:2},{value:"destroy",id:"destroy",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"init",id:"init",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"manage",id:"manage",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"postManage",id:"postmanage",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"preManage",id:"premanage",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4}],p={toc:s},d="wrapper";function c(e){let{components:a,...n}=e;return(0,t.yg)(d,(0,r.A)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"/api/modules/ima_core"},"@ima/core"),".PageManager"),(0,t.yg)("p",null,"The page manager is a utility for managing the current controller and its\nview."),(0,t.yg)("h2",{id:"hierarchy"},"Hierarchy"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},(0,t.yg)("strong",{parentName:"p"},(0,t.yg)("inlineCode",{parentName:"strong"},"PageManager"))),(0,t.yg)("p",{parentName:"li"},"\u21b3 ",(0,t.yg)("a",{parentName:"p",href:"/api/classes/ima_core.AbstractPageManager"},(0,t.yg)("inlineCode",{parentName:"a"},"AbstractPageManager"))),(0,t.yg)("p",{parentName:"li"},"\u21b3 ",(0,t.yg)("a",{parentName:"p",href:"/api/classes/ima_core.AbstractPageManager"},(0,t.yg)("inlineCode",{parentName:"a"},"AbstractPageManager"))))),(0,t.yg)("h2",{id:"constructors"},"Constructors"),(0,t.yg)("h3",{id:"constructor"},"constructor"),(0,t.yg)("p",null,"\u2022 ",(0,t.yg)("strong",{parentName:"p"},"new PageManager"),"()"),(0,t.yg)("h2",{id:"methods"},"Methods"),(0,t.yg)("h3",{id:"destroy"},"destroy"),(0,t.yg)("p",null,"\u25b8 ",(0,t.yg)("strong",{parentName:"p"},"destroy"),"(): ",(0,t.yg)("inlineCode",{parentName:"p"},"Promise"),"\\<",(0,t.yg)("inlineCode",{parentName:"p"},"unknown"),">"),(0,t.yg)("p",null,"Finalization callback, called when the page manager is being discarded.\nThis usually happens when the page is hot-reloaded at the client side."),(0,t.yg)("h4",{id:"returns"},"Returns"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Promise"),"\\<",(0,t.yg)("inlineCode",{parentName:"p"},"unknown"),">"),(0,t.yg)("h4",{id:"defined-in"},"Defined in"),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/86f3672/packages/core/src/page/manager/PageManager.ts#L68"},"packages/core/src/page/manager/PageManager.ts:68")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"init"},"init"),(0,t.yg)("p",null,"\u25b8 ",(0,t.yg)("strong",{parentName:"p"},"init"),"(): ",(0,t.yg)("inlineCode",{parentName:"p"},"void")),(0,t.yg)("p",null,"Initializes the page manager."),(0,t.yg)("h4",{id:"returns-1"},"Returns"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"void")),(0,t.yg)("h4",{id:"defined-in-1"},"Defined in"),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/86f3672/packages/core/src/page/manager/PageManager.ts#L20"},"packages/core/src/page/manager/PageManager.ts:20")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"manage"},"manage"),(0,t.yg)("p",null,"\u25b8 ",(0,t.yg)("strong",{parentName:"p"},"manage"),"(",(0,t.yg)("inlineCode",{parentName:"p"},"args"),"): ",(0,t.yg)("inlineCode",{parentName:"p"},"Promise"),"\\<",(0,t.yg)("inlineCode",{parentName:"p"},"unknown"),">"),(0,t.yg)("p",null,"Starts to manage the provided controller and its view. The manager\nstops the management of any previously managed controller and view."),(0,t.yg)("p",null,"The controller and view will be initialized and rendered either into the\nUI (at the client-side) or to the response to send to the client (at the\nserver-side)."),(0,t.yg)("h4",{id:"parameters"},"Parameters"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,t.yg)("th",{parentName:"tr",align:"left"},"Type"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"args")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("a",{parentName:"td",href:"/api/modules/ima_core#manageargs"},(0,t.yg)("inlineCode",{parentName:"a"},"ManageArgs")))))),(0,t.yg)("h4",{id:"returns-2"},"Returns"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Promise"),"\\<",(0,t.yg)("inlineCode",{parentName:"p"},"unknown"),">"),(0,t.yg)("p",null,"A promise that will resolve to information about the rendered page.\nThe ",(0,t.yg)("inlineCode",{parentName:"p"},"status")," will contain the HTTP status code to send to the\nclient (at the server side) or determine the type of error page\nto navigate to (at the client side)."),(0,t.yg)("h4",{id:"defined-in-2"},"Defined in"),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/86f3672/packages/core/src/page/manager/PageManager.ts#L53"},"packages/core/src/page/manager/PageManager.ts:53")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"postmanage"},"postManage"),(0,t.yg)("p",null,"\u25b8 ",(0,t.yg)("strong",{parentName:"p"},"postManage"),"(): ",(0,t.yg)("inlineCode",{parentName:"p"},"void")),(0,t.yg)("p",null,"Called by router after currently managed route is resolved."),(0,t.yg)("h4",{id:"returns-3"},"Returns"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"void")),(0,t.yg)("h4",{id:"defined-in-3"},"Defined in"),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/86f3672/packages/core/src/page/manager/PageManager.ts#L60"},"packages/core/src/page/manager/PageManager.ts:60")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"premanage"},"preManage"),(0,t.yg)("p",null,"\u25b8 ",(0,t.yg)("strong",{parentName:"p"},"preManage"),"(): ",(0,t.yg)("inlineCode",{parentName:"p"},"Promise"),"\\<",(0,t.yg)("inlineCode",{parentName:"p"},"void"),">"),(0,t.yg)("p",null,"Pre manage handler, should be called and awaited before tryint to handle\nnew route handler. This pre manage takes care of canceling any currently\nexecuted route handlers and returns promise which is resolved when previous\npage finished loading (even if it got canceled)."),(0,t.yg)("h4",{id:"returns-4"},"Returns"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Promise"),"\\<",(0,t.yg)("inlineCode",{parentName:"p"},"void"),">"),(0,t.yg)("h4",{id:"defined-in-4"},"Defined in"),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/86f3672/packages/core/src/page/manager/PageManager.ts#L30"},"packages/core/src/page/manager/PageManager.ts:30")))}c.isMDXComponent=!0}}]);