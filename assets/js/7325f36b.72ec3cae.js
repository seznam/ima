"use strict";(self.webpackChunk_ima_docs=self.webpackChunk_ima_docs||[]).push([[6557],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),o=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=o(a),b=n,k=m["".concat(p,".").concat(b)]||m[b]||c[b]||i;return a?r.createElement(k,l(l({ref:t},d),{},{components:a})):r.createElement(k,l({ref:t},d))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=b;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:n,l[1]=s;for(var o=2;o<i;o++)l[o]=a[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},6311:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var r=a(5773),n=(a(7294),a(3905));const i={id:"ima_core.Observable",title:"Class: Observable",sidebar_label:"@ima/core.Observable",custom_edit_url:null},l=void 0,s={unversionedId:"api/classes/ima_core.Observable",id:"api/classes/ima_core.Observable",title:"Class: Observable",description:"@ima/core.Observable",source:"@site/../docs/api/classes/ima_core.Observable.md",sourceDirName:"api/classes",slug:"/api/classes/ima_core.Observable",permalink:"/api/classes/ima_core.Observable",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"ima_core.Observable",title:"Class: Observable",sidebar_label:"@ima/core.Observable",custom_edit_url:null},sidebar:"api",previous:{title:"@ima/core.ObjectContainer",permalink:"/api/classes/ima_core.ObjectContainer"},next:{title:"@ima/core.ObservableImpl",permalink:"/api/classes/ima_core.ObservableImpl"}},p={},o=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:2},{value:"clear",id:"clear",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"destroy",id:"destroy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"init",id:"init",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"registerPersistenEvent",id:"registerpersistenevent",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"subscribe",id:"subscribe",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"unsubscribe",id:"unsubscribe",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4}],d={toc:o},m="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(m,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/modules/ima_core"},"@ima/core"),".Observable"),(0,n.kt)("p",null,"An Observable is a class that manages event listeners and allows distributing\nevents to the registered listeners. It maintains a history of events and supports\npersistent events that are not cleared during route changes."),(0,n.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Observable"))),(0,n.kt)("p",{parentName:"li"},"\u21b3 ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.ObservableImpl"},(0,n.kt)("inlineCode",{parentName:"a"},"ObservableImpl"))),(0,n.kt)("p",{parentName:"li"},"\u21b3 ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.ObservableImpl"},(0,n.kt)("inlineCode",{parentName:"a"},"ObservableImpl"))))),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new Observable"),"()"),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"clear"},"clear"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"clear"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"Clears all persistent events, observers, and activity history from the observable."),(0,n.kt)("p",null,"This method will remove all stored events, registered observers, and any recorded\nactivity history, effectively resetting the observable to its initial state."),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"The instance of the Observable for chaining."),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/70684d4/packages/core/src/event/Observable.ts#L35"},"packages/core/src/event/Observable.ts:35")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"destroy"},"destroy"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"destroy"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"Destroys the observable by clearing its internal state and removing all event listeners."),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"The instance of the Observable for chaining."),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/70684d4/packages/core/src/event/Observable.ts#L23"},"packages/core/src/event/Observable.ts:23")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"init"},"init"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"init"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"Initializes the observable."),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"The instance of the Observable for chaining."),(0,n.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/70684d4/packages/core/src/event/Observable.ts#L14"},"packages/core/src/event/Observable.ts:14")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"registerpersistenevent"},"registerPersistenEvent"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"registerPersistenEvent"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"E"),">","(",(0,n.kt)("inlineCode",{parentName:"p"},"event"),"): ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"Registers an event as persistent, meaning its history won't be cleared upon calling the ",(0,n.kt)("inlineCode",{parentName:"p"},"clear")," method (route change)."),(0,n.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"E")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends keyof ",(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/ima_core.DispatcherEventsMap"},(0,n.kt)("inlineCode",{parentName:"a"},"DispatcherEventsMap")))))),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"event")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"E")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The name of the event to be registered as persistent. This can be a key from the DispatcherEventsMap or any string.")))),(0,n.kt)("h4",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"The instance of the Observable for chaining."),(0,n.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/70684d4/packages/core/src/event/Observable.ts#L45"},"packages/core/src/event/Observable.ts:45")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"subscribe"},"subscribe"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"subscribe"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"E"),">","(",(0,n.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"observer"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"scope?"),"): ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"Subscribes an observer to a specific event. When the event is dispatched,\nthe observer will be notified and executed within the provided scope.\nIf the event has already occurred, the observer will be immediately\ninvoked with the historical data."),(0,n.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"E")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends keyof ",(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/ima_core.DispatcherEventsMap"},(0,n.kt)("inlineCode",{parentName:"a"},"DispatcherEventsMap")))))),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"event")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"E")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The event to subscribe to.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"observer")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/modules/ima_core#dispatcherlistener"},(0,n.kt)("inlineCode",{parentName:"a"},"DispatcherListener")),"<",(0,n.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The observer function to be called when the event is dispatched.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"scope?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"unknown")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The scope in which the observer function should be executed. This is optional.")))),(0,n.kt)("h4",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"The instance of the Observable for chaining."),(0,n.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/70684d4/packages/core/src/event/Observable.ts#L63"},"packages/core/src/event/Observable.ts:63")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"unsubscribe"},"unsubscribe"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"unsubscribe"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"E"),">","(",(0,n.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"observer"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"scope?"),"): ",(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"Unsubscribes an observer from a specific event."),(0,n.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"E")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends keyof ",(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/ima_core.DispatcherEventsMap"},(0,n.kt)("inlineCode",{parentName:"a"},"DispatcherEventsMap")))))),(0,n.kt)("h4",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"event")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"E")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The event name or key from the DispatcherEventsMap.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"observer")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/modules/ima_core#dispatcherlistener"},(0,n.kt)("inlineCode",{parentName:"a"},"DispatcherListener")),"<",(0,n.kt)("inlineCode",{parentName:"td"},"any"),">"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The observer (listener) to be unsubscribed.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"scope?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"unknown")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Optional scope to be used for the observer.")))),(0,n.kt)("h4",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/classes/ima_core.Observable"},(0,n.kt)("inlineCode",{parentName:"a"},"Observable"))),(0,n.kt)("p",null,"The current instance for chaining."),(0,n.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/seznam/ima/blob/70684d4/packages/core/src/event/Observable.ts#L80"},"packages/core/src/event/Observable.ts:80")))}c.isMDXComponent=!0}}]);